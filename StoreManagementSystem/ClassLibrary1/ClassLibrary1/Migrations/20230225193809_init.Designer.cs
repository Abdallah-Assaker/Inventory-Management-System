// <auto-generated />
using System;
using InventoryManagementSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassLibrary1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230225193809_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagementSystem.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "TVs"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Phones"
                        },
                        new
                        {
                            ID = 3,
                            Name = "TVs"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Phones"
                        });
                });

            modelBuilder.Entity("InventoryManagementSystem.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Remain")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Ahmed Mohammed",
                            Phone = "01054987625",
                            Remain = 0f
                        },
                        new
                        {
                            ID = 2,
                            Name = "Hosam Mohammed",
                            Phone = "01154980048",
                            Remain = 0f
                        });
                });

            modelBuilder.Entity("InventoryManagementSystem.CustomerOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int?>("InventoryID")
                        .HasColumnType("int");

                    b.Property<float>("Net")
                        .HasColumnType("real");

                    b.Property<DateTime>("OrderedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Paid")
                        .HasColumnType("real");

                    b.Property<float>("Remain")
                        .HasColumnType("real");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("InventoryID");

                    b.HasIndex("UserID");

                    b.ToTable("CustomerOrders");
                });

            modelBuilder.Entity("InventoryManagementSystem.CustomerProductBill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CustomerOrderID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReturnQuantity")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CustomerOrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("CustomerProductBills");
                });

            modelBuilder.Entity("InventoryManagementSystem.Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Inventories", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Location = "Sohag"
                        },
                        new
                        {
                            ID = 2,
                            Location = "Asyut"
                        },
                        new
                        {
                            ID = 3,
                            Location = "Cairo"
                        });
                });

            modelBuilder.Entity("InventoryManagementSystem.InventoryCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("InventoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("InventoryID");

                    b.ToTable("InventoryCategories");
                });

            modelBuilder.Entity("InventoryManagementSystem.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("SellPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("InventoryID");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 2,
                            InventoryID = 1,
                            Name = "Samsung",
                            Price = 1500f,
                            Quantity = 10,
                            SellPrice = 2000f
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 2,
                            InventoryID = 1,
                            Name = "IPone",
                            Price = 2000f,
                            Quantity = 15,
                            SellPrice = 2300f
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 1,
                            InventoryID = 1,
                            Name = "LG",
                            Price = 5000f,
                            Quantity = 50,
                            SellPrice = 6000f
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 1,
                            InventoryID = 2,
                            Name = "LG",
                            Price = 2000f,
                            Quantity = 15,
                            SellPrice = 2300f
                        });
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnCustomerOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CustomerOrderID")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CustomerOrderID");

                    b.HasIndex("InventoryID");

                    b.ToTable("ReturnCustomerOrder");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnCustomerProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReturnCustomerOrderID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ReturnCustomerOrderID");

                    b.ToTable("ReturnCustomerProducts");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnSupplierOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierOrderID")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("InventoryID");

                    b.HasIndex("SupplierID");

                    b.HasIndex("SupplierOrderID");

                    b.ToTable("ReturnSupplierOrders");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnSupplierProduct", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReturnSupplierOrderID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ReturnSupplierOrderID");

                    b.ToTable("ReturnSupplierProducts");
                });

            modelBuilder.Entity("InventoryManagementSystem.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Remain")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Suppliers", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Hassn Ahmed",
                            Phone = "01479687625",
                            Remain = 0f
                        },
                        new
                        {
                            ID = 2,
                            Name = "Khaled Mohammed",
                            Phone = "01287625738",
                            Remain = 0f
                        });
                });

            modelBuilder.Entity("InventoryManagementSystem.SupplierOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("InventoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderedOn")
                        .HasColumnType("datetime2");

                    b.Property<float>("Paid")
                        .HasColumnType("real");

                    b.Property<float>("Remain")
                        .HasColumnType("real");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InventoryID");

                    b.HasIndex("SupplierID");

                    b.HasIndex("UserID");

                    b.ToTable("SupplierOrders");
                });

            modelBuilder.Entity("InventoryManagementSystem.SupplierProductBill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReturnQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierOrderID")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SupplierOrderID");

                    b.ToTable("SupplierProductBills");
                });

            modelBuilder.Entity("InventoryManagementSystem.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Namer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InventoryManagementSystem.CustomerOrder", b =>
                {
                    b.HasOne("InventoryManagementSystem.Customer", "Customer")
                        .WithMany("CustomerOrders")
                        .HasForeignKey("CustomerID");

                    b.HasOne("InventoryManagementSystem.Inventory", "Inventory")
                        .WithMany("CustomerOrder")
                        .HasForeignKey("InventoryID");

                    b.HasOne("InventoryManagementSystem.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Customer");

                    b.Navigation("Inventory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InventoryManagementSystem.CustomerProductBill", b =>
                {
                    b.HasOne("InventoryManagementSystem.CustomerOrder", "CustomerOrder")
                        .WithMany("CustomerProductBills")
                        .HasForeignKey("CustomerOrderID");

                    b.HasOne("InventoryManagementSystem.Product", "Product")
                        .WithMany("CustomerProductBills")
                        .HasForeignKey("ProductID");

                    b.Navigation("CustomerOrder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InventoryManagementSystem.InventoryCategory", b =>
                {
                    b.HasOne("InventoryManagementSystem.Category", "Category")
                        .WithMany("InventoryCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryManagementSystem.Inventory", "Inventory")
                        .WithMany("InventoryCategories")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("InventoryManagementSystem.Product", b =>
                {
                    b.HasOne("InventoryManagementSystem.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("CategoryID");

                    b.HasOne("InventoryManagementSystem.Inventory", "Inventory")
                        .WithMany("Products")
                        .HasForeignKey("InventoryID");

                    b.Navigation("Category");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnCustomerOrder", b =>
                {
                    b.HasOne("InventoryManagementSystem.CustomerOrder", "CustomerOrder")
                        .WithMany("ReturnCustomerOrders")
                        .HasForeignKey("CustomerOrderID");

                    b.HasOne("InventoryManagementSystem.Inventory", null)
                        .WithMany("ReturnCustomerOrder")
                        .HasForeignKey("InventoryID");

                    b.Navigation("CustomerOrder");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnCustomerProduct", b =>
                {
                    b.HasOne("InventoryManagementSystem.Product", "Product")
                        .WithMany("ReturnCustomerProducts")
                        .HasForeignKey("ProductID");

                    b.HasOne("InventoryManagementSystem.ReturnCustomerOrder", "ReturnCustomerOrder")
                        .WithMany("ReturnCustomerProducts")
                        .HasForeignKey("ReturnCustomerOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ReturnCustomerOrder");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnSupplierOrder", b =>
                {
                    b.HasOne("InventoryManagementSystem.Customer", null)
                        .WithMany("ReturnSupplierOrder")
                        .HasForeignKey("CustomerID");

                    b.HasOne("InventoryManagementSystem.Inventory", null)
                        .WithMany("ReturnSupplierOrder")
                        .HasForeignKey("InventoryID");

                    b.HasOne("InventoryManagementSystem.Supplier", null)
                        .WithMany("ReturnSupplierOrder")
                        .HasForeignKey("SupplierID");

                    b.HasOne("InventoryManagementSystem.SupplierOrder", "SupplierOrder")
                        .WithMany("ReturnSupplierOrders")
                        .HasForeignKey("SupplierOrderID");

                    b.Navigation("SupplierOrder");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnSupplierProduct", b =>
                {
                    b.HasOne("InventoryManagementSystem.Product", "Product")
                        .WithMany("ReturnSupplierProducts")
                        .HasForeignKey("ProductID");

                    b.HasOne("InventoryManagementSystem.ReturnSupplierOrder", "ReturnSupplierOrder")
                        .WithMany("ReturnSupplierProducts")
                        .HasForeignKey("ReturnSupplierOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ReturnSupplierOrder");
                });

            modelBuilder.Entity("InventoryManagementSystem.SupplierOrder", b =>
                {
                    b.HasOne("InventoryManagementSystem.Inventory", "Inventory")
                        .WithMany("SupplierOrders")
                        .HasForeignKey("InventoryID");

                    b.HasOne("InventoryManagementSystem.Supplier", "Supplier")
                        .WithMany("SupplierOrders")
                        .HasForeignKey("SupplierID");

                    b.HasOne("InventoryManagementSystem.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Inventory");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InventoryManagementSystem.SupplierProductBill", b =>
                {
                    b.HasOne("InventoryManagementSystem.Product", "Product")
                        .WithMany("SupplierProductBills")
                        .HasForeignKey("ProductID");

                    b.HasOne("InventoryManagementSystem.SupplierOrder", "SupplierOrder")
                        .WithMany("SupplierProductBills")
                        .HasForeignKey("SupplierOrderID");

                    b.Navigation("Product");

                    b.Navigation("SupplierOrder");
                });

            modelBuilder.Entity("InventoryManagementSystem.Category", b =>
                {
                    b.Navigation("InventoryCategories");

                    b.Navigation("products");
                });

            modelBuilder.Entity("InventoryManagementSystem.Customer", b =>
                {
                    b.Navigation("CustomerOrders");

                    b.Navigation("ReturnSupplierOrder");
                });

            modelBuilder.Entity("InventoryManagementSystem.CustomerOrder", b =>
                {
                    b.Navigation("CustomerProductBills");

                    b.Navigation("ReturnCustomerOrders");
                });

            modelBuilder.Entity("InventoryManagementSystem.Inventory", b =>
                {
                    b.Navigation("CustomerOrder");

                    b.Navigation("InventoryCategories");

                    b.Navigation("Products");

                    b.Navigation("ReturnCustomerOrder");

                    b.Navigation("ReturnSupplierOrder");

                    b.Navigation("SupplierOrders");
                });

            modelBuilder.Entity("InventoryManagementSystem.Product", b =>
                {
                    b.Navigation("CustomerProductBills");

                    b.Navigation("ReturnCustomerProducts");

                    b.Navigation("ReturnSupplierProducts");

                    b.Navigation("SupplierProductBills");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnCustomerOrder", b =>
                {
                    b.Navigation("ReturnCustomerProducts");
                });

            modelBuilder.Entity("InventoryManagementSystem.ReturnSupplierOrder", b =>
                {
                    b.Navigation("ReturnSupplierProducts");
                });

            modelBuilder.Entity("InventoryManagementSystem.Supplier", b =>
                {
                    b.Navigation("ReturnSupplierOrder");

                    b.Navigation("SupplierOrders");
                });

            modelBuilder.Entity("InventoryManagementSystem.SupplierOrder", b =>
                {
                    b.Navigation("ReturnSupplierOrders");

                    b.Navigation("SupplierProductBills");
                });
#pragma warning restore 612, 618
        }
    }
}
